@page "/reservednames"
@using SavaDev.System.Front.Contract;
@using SavaDev.System.Front.Contract.Models;
@inject IReservedNameService _reservedNameService

<PageTitle>Reserved names</PageTitle>

<MudBreadcrumbs Items="breadCrumbs"></MudBreadcrumbs>

<MudTable ServerData="@(new Func<TableState, Task<TableData<ReservedNameViewModel>>>(ServerReload))"
    Hover="true" @ref="table">

    <ToolBarContent>
        <MudText Typo="Typo.h6">Reserved names</MudText>
        <MudSpacer />
        <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="text" T="ReservedNameViewModel">Text</MudTableSortLabel></MudTh>
        <MudTh>Include plural</MudTh>
        <MudTh></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Text">@context.Text</MudTd>
        <MudTd DataLabel="IncludePlural">@context.IncludePlural</MudTd>
        <MudTd><MudCheckBox T="bool" Checked="@context.IncludePlural" CheckedChanged="@(c=> HandleCheckedChanged(context, c))"></MudCheckBox></MudTd>
        <MudTd><MudButton OnClick="@(()=> DemoAction(context))">Clickme</MudButton></MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>

@code {
    private List<BreadcrumbItem> breadCrumbs = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("Reserved names", href: null, disabled: true)
    };
    private MudTable<ReservedNameViewModel>? table;

    private string searchString = string.Empty;

    private async Task<TableData<ReservedNameViewModel>> ServerReload(TableState state)
    {
        var filter = new ReservedNameFilterViewModel { Text =  "contains|" + searchString };

        //var result = await _reservedNameService.GetAll(filter, PageHelper.GetPageInfo(state));

        //return PageHelper.GetTableData<ReservedNameViewModel>(result);
        return new TableData<ReservedNameViewModel>();
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table?.ReloadServerData();
    }

    private void DemoAction(ReservedNameViewModel item)
    {

    }

    private async Task HandleCheckedChanged (ReservedNameViewModel item, bool isChecked)
    {
        var model = new ReservedNameFormViewModel { IncludePlural = isChecked };
        await _reservedNameService.Update(item.Text, model);
        //item.IncludePlural = isChecked;
        //StateHasChanged();
        table?.ReloadServerData();
    }
}
