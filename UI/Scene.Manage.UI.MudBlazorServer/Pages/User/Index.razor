@page "/users"
@using Framework.Base.Service.ListView
@using Framework.User.Service.Contract.Interfaces
@using Framework.User.Service.Contract.Models
@inject IFrameworkUserService _userService

<PageTitle>Пользователи</PageTitle>


<MudTable ServerData="@(new Func<TableState, Task<TableData<FrameworkUserViewModel>>>(ServerReload))"
        Hover="true" @ref="table">
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<FrameworkUserFilterViewModel, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<FrameworkUserFilterViewModel, object>(x=>x.Login)">Login</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<FrameworkUserFilterViewModel, object>(x=>x.Email)">Email</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<FrameworkUserFilterViewModel, object>(x=>x.IsBanned!)">IsBanned</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.Id</MudTd>
        <MudTd DataLabel="Temp. (C)">@context.Login</MudTd>
        <MudTd DataLabel="Temp. (F)">@context.Email</MudTd>
        <MudTd DataLabel="Summary">@context.IsBanned</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>


@code {
    private List<FrameworkUserViewModel>? Users;

    private IEnumerable<FrameworkUserViewModel> pagedData;
    private MudTable<FrameworkUserViewModel> table;

    private int totalItems;
    private string searchString = null;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task<TableData<FrameworkUserViewModel>> ServerReload(TableState state)
    {
        var filter = new FrameworkUserFilterViewModel { };

        var pageInfo = new ListPageInfoViewModel { Page = state.Page + 1, Rows = state.PageSize };

        var result = await _userService.GetAll(filter, pageInfo);
        Users = result.Items.ToList();
        
        totalItems = (int)result.TotalRows;

        return new TableData<FrameworkUserViewModel>() {TotalItems = totalItems, Items = Users};
    }
}
